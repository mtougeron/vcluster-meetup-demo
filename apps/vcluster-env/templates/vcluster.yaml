apiVersion: cluster.x-k8s.io/v1beta1
kind: Cluster
metadata:
  name: vc-{{.Values.cluster_name}}
  labels:
    name: vc-{{.Values.cluster_name}}
spec:
  infrastructureRef:
    apiVersion: infrastructure.cluster.x-k8s.io/v1alpha1
    kind: VCluster
    name: vc-{{.Values.cluster_name}}
---
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha1
kind: VCluster
metadata:
  name: vc-{{.Values.cluster_name}}
spec:
  controlPlaneEndpoint:
    host: "{{if .Values.ingress.base_domain_name}}vc-{{.Values.cluster_name}}.{{.Values.ingress.base_domain_name}}{{end}}"
    port: {{if .Values.ingress.base_domain_name}}443{{else}}0{{end}}
  helmRelease:
    chart:
      name: {{.Values.chart_name}}
      repo: {{.Values.chart_repo}}
      version: {{.Values.chart_version}}
    values: |
      serviceCIDR: "{{.Values.serviceCIDR}}"
{{if .Values.ingress.base_domain_name}}
      syncer:
        extraArgs:
          - --tls-san=vc-{{.Values.cluster_name}}.{{.Values.ingress.base_domain_name}}
{{end}}
      {{- if .Values.service.type }}
      service:
        type: {{.Values.service.type }}
        {{- if .Values.service.loadBalancerSourceRanges }}
        loadBalancerSourceRanges:
          {{- range $f := .Values.service.loadBalancerSourceRanges }}
          - "{{ $f }}"
          {{- end }}
        {{- end }}
        {{- if .Values.service.loadBalancerSourceRangesString }}
        {{ $parts := splitList "," .Values.service.loadBalancerSourceRangesString }}
        loadBalancerSourceRanges:
          {{- range $f := $parts }}
          - "{{ $f }}"
          {{- end }}
        {{- end }}
      {{- end }}
      securityContext:
        runAsUser: 12345
        runAsNonRoot: true
      sync:
        storageclasses:
          enabled: false
        legacy-storageclasses:
          enabled: true
  kubernetesVersion: "{{.Values.kubernetes_version}}"
{{if .Values.ingress.base_domain_name}}
{{if eq .Values.ingress.kind "HTTPProxy" }}
---
apiVersion: projectcontour.io/v1
kind: HTTPProxy
metadata:
{{if or .Values.ingress.annotations .Values.ingress.class}}
  annotations:
{{end}}
{{if .Values.ingress.class}}
    kubernetes.io/ingress.class: {{.Values.ingress.class}}
{{end}}
{{if .Values.ingress.annotations}}
{{.Values.ingress.annotations | toYaml | nindent 4}}
{{end}}
  name: vc-{{.Values.cluster_name}}
spec:
  virtualhost:
    fqdn: vc-{{.Values.cluster_name}}.{{.Values.ingress.base_domain_name}}
    tls:
      passthrough: true
  tcpproxy:
    services:
    - name: vc-{{.Values.cluster_name}}
      port: 443
{{else}}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
{{if or .Values.ingress.annotations .Values.ingress.class}}
  annotations:
{{end}}
{{if .Values.ingress.class}}
    kubernetes.io/ingress.class: {{.Values.ingress.class}}
{{end}}
{{if .Values.ingress.annotations}}
{{.Values.ingress.annotations | toYaml | nindent 4}}
{{end}}
  name: vc-{{.Values.cluster_name}}
spec:
  rules:
  - host: vc-{{.Values.cluster_name}}.{{.Values.ingress.base_domain_name}}
    http:
      paths:
      - backend:
          service:
            name: vc-{{.Values.cluster_name}}
            port: 
              number: 443
        path: /
        pathType: ImplementationSpecific
{{end}}
{{end}}